#include <LiquidCrystal.h>
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);

const int DISP_WIDTH = 16;
const int DISP_HEGHT = 2;
int Status;
int lol;
int button;
const int BUTTON_NONE   = 0;
const int BUTTON_RIGHT  = 1;
const int BUTTON_UP     = 2;
const int BUTTON_DOWN   = 3;
const int BUTTON_LEFT   = 4;
const int BUTTON_SELECT = 5;



const int mMAIN_MENU   = 0;
const int mRange       = 1; // РЎР‚Р В°РЎРѓРЎвЂљР С•РЎРЏР Р…Р С‘РЎРЏ
const int mSpeed       = 2; // РЎРѓР С”Р С•РЎР‚Р С•РЎРѓРЎвЂљР С‘
const int mFuel        = 3; // Р В±Р В°Р С”Р В°
const int mTemp_enj    = 4; // РЎвЂљР ВµР С�Р С—Р ВµРЎР‚Р В°РЎвЂљРЎС“РЎР‚РЎвЂ№ Р Т‘Р Р†Р С‘Р С–Р В°РЎвЂљР ВµР В»РЎРЏ
const int mTemp_aer    = 5; 
const int mFinishRange = 6;
const int mFinishFuel  = 7; 

int Range;       
int Speed;      
int Full;       
float Temp_enj;    
float Temp_aer;    
int FinishRange;
int FinishFuel;  
int Drosel;     
double  Volt;        



char Fields[32];     
const char SPACE = ' ';  

void setup() {
  lcd.begin(16, 2);
  Serial.begin(9600);
  lcd.setCursor(0,0); 

}

//Р В¤РЎС“Р Р…Р С”РЎвЂ Р С‘РЎРЏ Р Р…Р В°Р В¶Р В°РЎвЂљР С‘РЎРЏ Р С”Р Р…Р С•Р С—Р С”Р С‘
int getPressedButton()
{
  int buttonValue = analogRead(0);
  if (buttonValue < 100) {
    return BUTTON_RIGHT;
  }
  else if (buttonValue < 200) {
    return BUTTON_UP;
  }
  else if (buttonValue < 400) {
    return BUTTON_DOWN;
  }
  else if (buttonValue < 600) {
    return BUTTON_LEFT;
  }
  else if (buttonValue < 800) {
    return BUTTON_SELECT;
  }
  return BUTTON_NONE;
}





void loop()
{

  
  button = getPressedButton();
 
  Temp_enj = (analogRead(A1)/1024.0)*500; 
  Temp_aer = (analogRead(A2)/1024.0)*500; 
  Drosel   = (A4);
  Full     = (A5);
  Speed    = (analogRead(A3)/4);
  Volt     = (analogRead(0)/ 1023.0) * 12.0;
  int  Temp_en = Temp_enj; 
  int  Temp_ae = Temp_aer;
  





  switch (button)
  {

    
    case BUTTON_RIGHT:
      Status++;
      break;
    
    case BUTTON_LEFT:
      Status--;
      break;

    
    case BUTTON_SELECT:
      Status = 0;
      break;
   
    case BUTTON_NONE:
      Status = Status;
      break;
  }


  switch (Status)
  {
    case -1:
      {
        lcd.clear();
        lcd.print ("7");
        Status = 7;
      }
      break;

    
    case 0:
      {
        lcd.clear();
        lcd.print ("S=");lcd.print(Speed);lcd.print (" TA="); lcd.print (Temp_ae);lcd.print (" TE=");lcd.print (Temp_en );
      }
      break;

    //Р С›РЎвЂљР С•Р В±РЎР‚aР В¶Р ВµР Р…Р С‘Р Вµ mRange
    case 1:
      {
        lcd.clear();
        lcd.print ("Temp_aer = "); lcd.print (Temp_aer);
      }
      break;

    //Р С›РЎвЂљР С•Р В±РЎР‚aР В¶Р ВµР Р…Р С‘Р Вµ mSpeed
    case 2:
      {
        lcd.clear();
        lcd.print ("Temp_enj = "); lcd.print (Temp_enj );
      }
      break;

    //Р С›РЎвЂљР С•Р В±РЎР‚aР В¶Р ВµР Р…Р С‘Р Вµ mFuel
    case 3:
      {
        lcd.clear();
        lcd.print ("Speed  = ");lcd.print (Speed);
      }
      break;


    //Р С›РЎвЂљР С•Р В±РЎР‚aР В¶Р ВµР Р…Р С‘Р Вµ mTemp_enj
    case 4:
      {
        lcd.clear();
        lcd.print ("Volt  = ");lcd.print (Volt);
      }
      break;

    //Р С›РЎвЂљР С•Р В±РЎР‚aР В¶Р ВµР Р…Р С‘Р Вµ mTemp_aer
    case 5:
      {
        lcd.clear();
        lcd.print ("5");
      }
      break;

    //Р С›РЎвЂљР С•Р В±РЎР‚aР В¶Р ВµР Р…Р С‘Р Вµ mFinishRang
    case 6:
      {
        lcd.clear();
        lcd.print ("6");
      }
      break;

    //Р С›РЎвЂљР С•Р В±РЎР‚aР В¶Р ВµР Р…Р С‘Р Вµ mFinishFue
    case 7:
      {
        lcd.clear();
        lcd.print ("7");
      }
      break;

    case 8:
      {
        lcd.clear();
        lcd.print ("0");
        Status = 0;
      }

      break;

  }
  delay(1000);
}

